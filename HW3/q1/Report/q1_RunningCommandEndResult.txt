~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Constant array size which inside node is 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

LinkedArrayList - java.util.Collection Constructor Test
-----------------------------
LinkedList<String> student = new LinkedList<>();
Java utility legacy LinkedList which keeps student info created with no parameter constructor.

add("Nevzat")
add("171044024")

LinkedArrayList<String> studentInMyList = new LinkedArrayList<>( student );
List which keeps stundent info as String created with using Collection include constructor .

List Layout : Nevzat,171044024
Node Layout : (Nevzat,171044024)

- clear() 
Size of list = 0
List Layout : 
Node Layout : 
~~~~~~~

~~~~_test_list_constructor~~~END~~~~

LinkedArrayList - Method Test
-----------------------------
List which keeps cities created with no parameter constructor.

- size()
Size of list = 0
List Layout : 
Node Layout : 
~~~~~~~

- add( "Adana" ) 
Size of list = 1
List Layout : Adana
Node Layout : (Adana)
~~~~~~~

- add( "Istanbul" ) 
Size of list = 2
List Layout : Adana,Istanbul
Node Layout : (Adana,Istanbul)
~~~~~~~

- add( "Tokat" ) 
Size of list = 3
List Layout : Adana,Istanbul,Tokat
Node Layout : (Adana,Istanbul,Tokat)
~~~~~~~

- add( "Antalya" ) 
Size of list = 4
List Layout : Adana,Istanbul,Tokat,Antalya
Node Layout : (Adana,Istanbul,Tokat) | (Antalya)
~~~~~~~

- get( 0 ) 
Adana
Size of list = 4
List Layout : Adana,Istanbul,Tokat,Antalya
Node Layout : (Adana,Istanbul,Tokat) | (Antalya)
~~~~~~~

- get( cities.size() - 1 ) 
Antalya
Size of list = 4
List Layout : Adana,Istanbul,Tokat,Antalya
Node Layout : (Adana,Istanbul,Tokat) | (Antalya)
~~~~~~~

- set( 0 ," Kocaeli " ) 
Size of list = 4
List Layout : Kocaeli,Istanbul,Tokat,Antalya
Node Layout : (Kocaeli,Istanbul,Tokat) | (Antalya)
~~~~~~~

- remove( "Istanbul" ) 
Size of list = 3
List Layout : Kocaeli,Tokat,Antalya
Node Layout : (Kocaeli,Tokat) | (Antalya)
~~~~~~~

- add( 1 , "Izmir" ) 
Size of list = 4
List Layout : Kocaeli,Izmir,Tokat,Antalya
Node Layout : (Kocaeli,Izmir,Tokat) | (Antalya)
~~~~~~~

- remove( 1 ) 
Size of list = 3
List Layout : Kocaeli,Tokat,Antalya
Node Layout : (Kocaeli,Tokat) | (Antalya)
~~~~~~~

- indexOf("Antalya") 
2
Size of list = 3
List Layout : Kocaeli,Tokat,Antalya
Node Layout : (Kocaeli,Tokat) | (Antalya)
~~~~~~~

- add( "Tokat" ) 
Size of list = 4
List Layout : Kocaeli,Tokat,Antalya,Tokat
Node Layout : (Kocaeli,Tokat) | (Antalya,Tokat)
~~~~~~~

- add( "Chicago" ) 
Size of list = 5
List Layout : Kocaeli,Tokat,Antalya,Tokat,Chicago
Node Layout : (Kocaeli,Tokat) | (Antalya,Tokat,Chicago)
~~~~~~~

- lastIndexOf( "Tokat" ) 
3
Size of list = 5
List Layout : Kocaeli,Tokat,Antalya,Tokat,Chicago
Node Layout : (Kocaeli,Tokat) | (Antalya,Tokat,Chicago)
~~~~~~~

- hashCode() 
-1349455779
Size of list = 5
List Layout : Kocaeli,Tokat,Antalya,Tokat,Chicago
Node Layout : (Kocaeli,Tokat) | (Antalya,Tokat,Chicago)
~~~~~~~

- clear() 
Size of list = 0
List Layout : 
Node Layout : 
~~~~~~~

~~~~_test_list_function~~~END~~~~

LinkedArrayList - Iterator Test
-----------------------------
List which keeps countries created with no parameter constructor.

- size()
Size of list = 0
List Layout : 
Node Layout : 
~~~~~~~

ListIterator has been declared with name 'iter'.
- ListIterator<String> iter = listIterator("0")

- add("Canada")
Size of list = 1
List Layout : Canada
Node Layout : (Canada)
~~~~~~~

- add("USA")
Size of list = 2
List Layout : Canada,USA
Node Layout : (Canada,USA)
~~~~~~~

- add("China")
Size of list = 3
List Layout : Canada,USA,China
Node Layout : (Canada,USA,China)
~~~~~~~

- add("England")
Size of list = 4
List Layout : Canada,USA,China,England
Node Layout : (Canada,USA,China) | (England)
~~~~~~~

- add("Poland")
Size of list = 5
List Layout : Canada,USA,China,England,Poland
Node Layout : (Canada,USA,China) | (England,Poland)
~~~~~~~

- hasNext() 
false
Size of list = 5
List Layout : Canada,USA,China,England,Poland
Node Layout : (Canada,USA,China) | (England,Poland)
~~~~~~~

- hasPrevious() 
true
Size of list = 5
List Layout : Canada,USA,China,England,Poland
Node Layout : (Canada,USA,China) | (England,Poland)
~~~~~~~

- previous() 
Poland
Size of list = 5
List Layout : Canada,USA,China,England,Poland
Node Layout : (Canada,USA,China) | (England,Poland)
~~~~~~~

- previous() 
England
Size of list = 5
List Layout : Canada,USA,China,England,Poland
Node Layout : (Canada,USA,China) | (England,Poland)
~~~~~~~

- previous() 
China
Size of list = 5
List Layout : Canada,USA,China,England,Poland
Node Layout : (Canada,USA,China) | (England,Poland)
~~~~~~~

- previous() 
USA
Size of list = 5
List Layout : Canada,USA,China,England,Poland
Node Layout : (Canada,USA,China) | (England,Poland)
~~~~~~~

- previous() 
Canada
Size of list = 5
List Layout : Canada,USA,China,England,Poland
Node Layout : (Canada,USA,China) | (England,Poland)
~~~~~~~

- hasPrevious() 
false
Size of list = 5
List Layout : Canada,USA,China,England,Poland
Node Layout : (Canada,USA,China) | (England,Poland)
~~~~~~~

- next() 
Canada
Size of list = 5
List Layout : Canada,USA,China,England,Poland
Node Layout : (Canada,USA,China) | (England,Poland)
~~~~~~~

- add("India") 
Size of list = 6
List Layout : Canada,India,USA,China,England,Poland
Node Layout : (Canada,India,USA) | (China) | (England,Poland)
~~~~~~~

- next() 
USA
Size of list = 6
List Layout : Canada,India,USA,China,England,Poland
Node Layout : (Canada,India,USA) | (China) | (England,Poland)
~~~~~~~

- next() 
China
Size of list = 6
List Layout : Canada,India,USA,China,England,Poland
Node Layout : (Canada,India,USA) | (China) | (England,Poland)
~~~~~~~

- add("Brazil") 
Size of list = 7
List Layout : Canada,India,USA,China,Brazil,England,Poland
Node Layout : (Canada,India,USA) | (China,Brazil) | (England,Poland)
~~~~~~~

- next() 
England
Size of list = 7
List Layout : Canada,India,USA,China,Brazil,England,Poland
Node Layout : (Canada,India,USA) | (China,Brazil) | (England,Poland)
~~~~~~~

- add("Italy") 
Size of list = 8
List Layout : Canada,India,USA,China,Brazil,England,Italy,Poland
Node Layout : (Canada,India,USA) | (China,Brazil) | (England,Italy,Poland)
~~~~~~~

- previous() 
Italy
Size of list = 8
List Layout : Canada,India,USA,China,Brazil,England,Italy,Poland
Node Layout : (Canada,India,USA) | (China,Brazil) | (England,Italy,Poland)
~~~~~~~

- remove() 
Size of list = 7
List Layout : Canada,India,USA,China,Brazil,England,Poland
Node Layout : (Canada,India,USA) | (China,Brazil) | (England,Poland)
~~~~~~~

- next() 
Poland
Size of list = 7
List Layout : Canada,India,USA,China,Brazil,England,Poland
Node Layout : (Canada,India,USA) | (China,Brazil) | (England,Poland)
~~~~~~~

- remove() 
Size of list = 6
List Layout : Canada,India,USA,China,Brazil,England
Node Layout : (Canada,India,USA) | (China,Brazil) | (England)
~~~~~~~

- previous() 
England
Size of list = 6
List Layout : Canada,India,USA,China,Brazil,England
Node Layout : (Canada,India,USA) | (China,Brazil) | (England)
~~~~~~~

- previous() 
Brazil
Size of list = 6
List Layout : Canada,India,USA,China,Brazil,England
Node Layout : (Canada,India,USA) | (China,Brazil) | (England)
~~~~~~~

- nextIndex() 
4
Size of list = 6
List Layout : Canada,India,USA,China,Brazil,England
Node Layout : (Canada,India,USA) | (China,Brazil) | (England)
~~~~~~~

- previousIndex() 
3
Size of list = 6
List Layout : Canada,India,USA,China,Brazil,England
Node Layout : (Canada,India,USA) | (China,Brazil) | (England)
~~~~~~~

- set("Peru") 
Size of list = 6
List Layout : Canada,India,USA,China,Peru,England
Node Layout : (Canada,India,USA) | (China,Peru) | (England)
~~~~~~~

- clear() 
Size of list = 0
List Layout : 
Node Layout : 
~~~~~~~

~~~~_test_list_iterator~~~END~~~~